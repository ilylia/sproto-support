{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "fileTypes": [
    "sproto"
  ],
  "name": "sproto",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#sproto_type"
    },
    {
      "include": "#sproto_protocol"
    },
    {
      "match": "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b",
      "name": "constant.numeric.sproto"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "begin": "\\#",
          "end": "$",
          "name": "comment.block.sproto"
        }
      ]
    },
    "field": {
      "begin": "([A-Za-z][A-Za-z0-9_]*)(\\s*)([0-9]+)(\\s*)(\\:)(\\s*)(\\*?)",
      "beginCaptures": {
        "3": {
          "name": "constant.numeric.sproto"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#internal_type"
        },
        {
          "captures": {
            "1": {
              "name": "entity.name.class.sproto"
            },
            "4": {
              "name": "string.quoted.double.proto"
            }
          },
          "match": "([A-Za-z][A-Za-z0-9_]*)(\\()(\\s*)([A-Za-z][A-Za-z0-9_]*)(\\s*)(\\))"
        },
        {
          "captures": {
            "1": {
              "name": "entity.name.class.sproto"
            }
          },
          "match": "([A-Za-z][A-Za-z0-9_]*)"
        }
      ]
    },
    "internal_type": {
      "match": "\\b(integer|string|boolean)\\b",
      "name": "storage.type.sproto"
    },
    "protocol_session_struct": {
      "begin": "(response|request)(\\s*)(\\{)",
      "beginCaptures": {
        "1": {
          "name": "constant.language.sproto"
        }
      },
      "end": "\\}",
      "patterns": [
        {
          "include": "#sproto_struct"
        }
      ]
    },
    "protocol_session_typename": {
      "begin": "(response|request)(\\s*)",
      "beginCaptures": {
        "1": {
          "name": "constant.language.sproto"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "captures": {
            "1": {
              "name": "entity.name.class.sproto"
            }
          },
          "match": "([A-Za-z][A-Za-z0-9_]*)"
        }
      ]
    },
    "sproto_protocol": {
      "begin": "([A-Za-z][A-Za-z0-9_]*)(\\s*)([0-9]+)(\\s*)(\\{)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.sproto"
        },
        "3": {
          "name": "constant.numeric.sproto"
        }
      },
      "end": "\\}",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#protocol_session_struct"
        },
        {
          "include": "#protocol_session_typename"
        }
      ]
    },
    "sproto_struct": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#field"
        },
        {
          "include": "#sproto_type"
        }
      ]
    },
    "sproto_type": {
      "begin": "\\.([A-Za-z][A-Za-z0-9_.]*)(\\s*)(\\{)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.type.sproto"
        }
      },
      "end": "\\}",
      "patterns": [
        {
          "include": "#sproto_struct"
        }
      ]
    }
  },
  "scopeName": "source.sproto",
  "uuid": "5899f948-bdc0-4cb9-b282-50efe7c5d15d"
}